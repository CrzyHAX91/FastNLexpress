name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: ["3.9","3.10","3.11"]  # Ensures the latest stable Python 3 version is used.
        ubuntu-version: ["ubuntu-latest"]  # Always uses the latest stable Ubuntu version.

    runs-on: ${{ matrix.ubuntu-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            echo "⚠️ No requirements.txt found, skipping dependencies installation."
          fi

      - name: Run Django Migrations
        run: |
          if [ -f manage.py ]; then
            python manage.py migrate
          else
            echo "⚠️ manage.py not found, skipping migrations."
          fi

      - name: Run Tests
        run: |
          if [ -f manage.py ]; then
            python manage.py test
          else
            echo "⚠️ manage.py not found, skipping tests."
          fi

      - name: Check Code Style with Flake8
        run: |
          pip install flake8
          echo "Running Flake8..."
          flake8 . --count --max-complexity=10 --max-line-length=88 --statistics --exit-zero

      - name: Cleanup Pip Cache
        if: always()
        run: python -m pip cache purge
